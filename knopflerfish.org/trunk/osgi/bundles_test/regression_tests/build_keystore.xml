<?xml version="1.0" encoding="UTF-8"?>

<project name="build_keystore" default="all">

  <dirname property="proj.dir" file="${ant.file.build_keystore}"/>
  <property name="osgi.dir"    location="${proj.dir}/../.."/>
  <property name="jars.dir"    location="${osgi.dir}/test_jars"/>
  
  <property name="keystore.file"       value="${jars.dir}/test.keystore"/>
  <property name="keystore.password"   value="kftest"/>
  <property name="keystore.validity"   value="365"/>
  <property name="keystore.alias.ca"   value="testCA"/>
  <property name="keystore.alias.intermediate" value="intermediateCA"/>
  <property name="keystore.req"        value="${jars.dir}/keystore.req"/>
  <property name="keystore.alias.1"    value="kftest1"/>
  <property name="keystore.dname.1"
	    value="CN=Knopflerfish Dude, OU=Surf, O=Wave Inc., L=Paradise, ST=HI, C=KF"/>
  <property name="keystore.alias.2"    value="kftest2"/>
  <property name="keystore.dname.2"
	    value="CN=Test Dude, OU=Test, O=Wave Inc., L=Mellerud, C=SE"/>
  <property name="keystore.cert.2"     value="${jars.dir}/kftest2.cert"/>
  <property name="keystore.alias.3"    value="kftest3"/>
  <property name="keystore.dname.3"
	    value="CN=Goalie Dude, OU=Test, O=Other Inc., L=Trosa, C=SE"/>
  <property name="keystore.cert.3"     value="${jars.dir}/kftest3.cert"/>
  <property name="keystore.alias.4"    value="kftest4"/>
  <property name="keystore.dname.4"
	    value="CN=Odd Dude, O=Space Inc., ST=MO, C=KF"/>

  <property name="ca.dir"      value="${jars.dir}/testCA"/>
  <property name="ca.config"   value="openssl.config"/>
  <property name="ca.subj"     value="/C=SE/L=GBG/O=Knopflerfish/OU=Test/CN=CA Dude"/>
  <property name="ca.key"      value="${ca.dir}/private/cakey.pem"/>
  <property name="ca.cert"     value="${ca.dir}/cacert.pem"/>
  <property name="ca.days"     value="365"/>

  <property name="intermediate.dir"      value="${ca.dir}/intermediate"/>
  <property name="intermediate.name"     value="CA_intermediate"/>
  <property name="intermediate.subj"     value="/C=SE/L=Trosa/O=Yes/OU=Test/CN=iDude"/>
  <property name="intermediate.key"      value="${intermediate.dir}/private/cakey.pem"/>
  <property name="intermediate.cert"     value="${intermediate.dir}/cacert.pem"/>
  <property name="intermediate.req"      value="${ca.dir}/intermediate.req"/>

  <property name="castore.file"       value="${jars.dir}/test.castore"/>
  <property name="castore.password"   value="catest"/>
  <property name="castore.alias.ca"   value="caca"/>
  <property name="castore.alias.1"    value="ca1"/>
  <property name="castore.file.ca"    value="${jars.dir}/caca"/>
  <property name="castore.file.1"     value="${jars.dir}/ca1"/>

  <target name="init_keystore">
    <echo message="jars.dir=${jars.dir}"/>
    <copy file="${ca.config}" todir="${jars.dir}"/>
    <uptodate property="keystoreUpToDate"
              srcfile="${ant.file}"
              targetfile="${keystore.file}"/>
  </target>

 <target name="init_ca">
    <basename property="ant.filename" file="${ant.file}"/>
    <uptodate property="caUpToDate"
              targetfile="${ca.cert}">
      <srcfiles dir=".">
        <include name="${ant.filename}"/>
        <include name="${ca.config}"/>
      </srcfiles>
    </uptodate>
  </target>

  <target name="init_intermediate">
    <uptodate property="intermediateUpToDate"
              srcfile="${ca.cert}"
              targetfile="${intermediate.cert}"/>
  </target>

  <target name="init_castore">
    <uptodate property="castoreUpToDate"
              srcfile="${keystore.file}"
              targetfile="${castore.file}"/>
  </target>

  <target name="all" depends="keystore, castore"/>

  <target name="keystore"
	  depends="init_keystore,ca,intermediate"
	  unless="keystoreUpToDate">
   <delete file="${keystore.file}"/>
   <!-- Import CA certificate -->
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-import"/>
             <arg value="-noprompt"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.ca}"/>
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-file"/>      <arg value="${ca.cert}" />
   </exec>
   <!-- Import intermediate CA certificate -->
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-import"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.intermediate}"/>
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-file"/>      <arg value="${intermediate.cert}" />
   </exec>
   <!-- Generate a self signed certificate -->
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-genkey"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.1}"/>
             <arg value="-dname"/>     <arg value="${keystore.dname.1}" />
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-validity"/>  <arg value="${keystore.validity}" />
   </exec>
   <!-- Generate a CA signed certificate -->
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-genkey"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.2}"/>
             <arg value="-dname"/>     <arg value="${keystore.dname.2}" />
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-validity"/>  <arg value="${keystore.validity}" />
   </exec>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-certreq"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.2}"/>
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-file"/>      <arg value="${keystore.req}" />
   </exec>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="ca"/>
             <arg value="-config"/>    <arg value="${ca.config}" />
             <arg value="-batch"/>
             <arg value="-notext"/>
             <arg value="-out"/>       <arg value="${keystore.cert.2}"/>
             <arg value="-infiles"/>   <arg value="${keystore.req}" />
   </exec>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-import"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.2}"/>
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-file"/>      <arg value="${keystore.cert.2}" />
   </exec>
   <!-- Generate a intermediate CA signed certificate -->
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-genkey"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.3}"/>
             <arg value="-dname"/>     <arg value="${keystore.dname.3}" />
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-validity"/>  <arg value="${keystore.validity}" />
   </exec>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-certreq"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.3}"/>
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-file"/>      <arg value="${keystore.req}" />
   </exec>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="ca"/>
             <arg value="-config"/>    <arg value="${ca.config}" />
             <arg value="-name"/>      <arg value="${intermediate.name}" />
             <arg value="-batch"/>
             <arg value="-notext"/>
             <arg value="-out"/>       <arg value="${keystore.cert.3}"/>
             <arg value="-infiles"/>   <arg value="${keystore.req}" />
   </exec>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-import"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.3}"/>
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-file"/>      <arg value="${keystore.cert.3}" />
   </exec>
   <delete file="${keystore.req}"/>
   <delete file="${keystore.cert.2}"/>
   <delete file="${keystore.cert.3}"/>
   <!-- Generate a self signed certificate that isn't stored in castore -->
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-genkey"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.4}"/>
             <arg value="-dname"/>     <arg value="${keystore.dname.4}" />
             <arg value="-keypass"/>   <arg value="${keystore.password}" />
             <arg value="-validity"/>  <arg value="${keystore.validity}" />
   </exec>
  </target>

  <target name="ca" depends="init_ca" unless="caUpToDate">
   <delete dir="${ca.dir}"/>
   <mkdir dir="${ca.dir}"/>
   <mkdir dir="${ca.dir}/certs"/>
   <mkdir dir="${ca.dir}/crl"/>
   <mkdir dir="${ca.dir}/newcerts"/>
   <mkdir dir="${ca.dir}/private"/>
   <echo message="01" file="${ca.dir}/serial"/>
   <touch file="${ca.dir}/index.txt"/>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="genrsa"/>
             <arg value="-out"/>       <arg value="${ca.key}"/>
   </exec>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="req"/>
             <arg value="-config"/>    <arg value="${ca.config}" />
             <arg value="-x509"/>
             <arg value="-new"/>
             <arg value="-days"/>      <arg value="${ca.days}" />
             <arg value="-subj"/>      <arg value="${ca.subj}" />
             <arg value="-key"/>       <arg value="${ca.key}" />
             <arg value="-out"/>       <arg value="${ca.cert}"/>
   </exec>
  </target>

  <target name="intermediate" depends="ca,init_intermediate" unless="intermediateUpToDate">
   <delete dir="${intermediate.dir}"/>
   <mkdir dir="${intermediate.dir}"/>
   <mkdir dir="${intermediate.dir}/certs"/>
   <mkdir dir="${intermediate.dir}/crl"/>
   <mkdir dir="${intermediate.dir}/newcerts"/>
   <mkdir dir="${intermediate.dir}/private"/>
   <echo message="01" file="${intermediate.dir}/serial"/>
   <touch file="${intermediate.dir}/index.txt"/>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="genrsa"/>
             <arg value="-out"/>       <arg value="${intermediate.key}"/>
   </exec>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="req"/>
             <arg value="-config"/>    <arg value="${ca.config}" />
             <arg value="-new"/>
             <arg value="-subj"/>      <arg value="${intermediate.subj}" />
             <arg value="-key"/>       <arg value="${intermediate.key}" />
             <arg value="-out"/>       <arg value="${intermediate.req}"/>
   </exec>
   <exec executable="openssl" failonerror="true" failifexecutionfails="false"
	 dir="${jars.dir}">
             <arg value="ca"/>
             <arg value="-config"/>    <arg value="${ca.config}" />
             <arg value="-batch"/>
             <arg value="-notext"/>
             <arg value="-extensions"/><arg value="v3_ca"/>
             <arg value="-out"/>       <arg value="${intermediate.cert}"/>
             <arg value="-infiles"/>   <arg value="${intermediate.req}" />
   </exec>
   <delete file="${intermediate.req}"/>
  </target>

  <target name="castore" depends="keystore, init_castore" unless="castoreUpToDate">
   <delete file="${castore.file}"/>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-export"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.ca}"/>
             <arg value="-file"/>      <arg value="${castore.file.ca}" />
   </exec>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-export"/>
             <arg value="-keystore"/>  <arg value="${keystore.file}" />
             <arg value="-storepass"/> <arg value="${keystore.password}" />
             <arg value="-alias"/>     <arg value="${keystore.alias.1}"/>
             <arg value="-file"/>      <arg value="${castore.file.1}" />
   </exec>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-import"/>
             <arg value="-keystore"/>  <arg value="${castore.file}" />
             <arg value="-storepass"/> <arg value="${castore.password}" />
             <arg value="-alias"/>     <arg value="${castore.alias.ca}"/>
             <arg value="-file"/>      <arg value="${castore.file.ca}" />
             <arg value="-noprompt"/>
   </exec>
   <delete file="${castore.file.ca}"/>
   <exec executable="keytool" failonerror="true" dir="${jars.dir}">
             <arg value="-import"/>
             <arg value="-keystore"/>  <arg value="${castore.file}" />
             <arg value="-storepass"/> <arg value="${castore.password}" />
             <arg value="-alias"/>     <arg value="${castore.alias.1}"/>
             <arg value="-file"/>      <arg value="${castore.file.1}" />
             <arg value="-noprompt"/>
   </exec>
   <delete file="${castore.file.1}"/>
  </target>

  <target name="clean">
    <delete dir="${ca.dir}"/>
    <delete file="${keystore.file}"/>
    <delete file="${castore.file}"/>
  </target>

</project>
