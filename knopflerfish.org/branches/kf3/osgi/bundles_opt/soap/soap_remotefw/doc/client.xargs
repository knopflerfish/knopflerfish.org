#
# Xargs fragment file for client framework managing a server framework
# through the Remote Framework SOAP service (Axis 1).
#
# Start the server framework with a command like:
#
#   java -jar framework.jar -xargs init.xargs --xargs client.xargs
#
#
# NOTE: You may need to adjust the version number part of the file
#       names of the bundles that are installed, started, uninstalled
#       below.
#


# Where the framework will store its state; set it to allow running
# both server and client from the same directory (KF-installation).
-Forg.osgi.framework.storage=fwdirClient

#
# Uninstall bundle that are not needed on the server
# (The crimson bundle provides very old, incompatible XML-API)
#
-uninstall crimson/crimson-2.1.0.kf3.jar


-initlevel 6
-install remotefw/remotefw_api-2.0.0.jar
-istart commons-logging/commons-logging_all-2.0.0.kf3.jar
-istart  xerces/xerces-2.10.1.kf3.jar
-istart  xalan/xalan-2.7.1.kf3.jar
-istart  axis-osgi/axis-osgi_all-0.1.0.kf3.jar
-istart  soap_remotefw/soap_remotefw_all-3.0.1.jar

# Properties controlling the server behavior
-Forg.knopflerfish.soap.remotefw.server=true
-Forg.knopflerfish.soap.remotefw.server.debug=false

# Properties controlling the client behavior
-Forg.knopflerfish.soap.remotefw.client=true
-Forg.knopflerfish.soap.remotefw.client.debug=false
#-Forg.knopflerfish.soap.remotefw.client.eventinterval=3000
#-Forg.knopflerfish.soap.remotefw.client.sendlocalpaths=false

# The Client runs its HttpServer on 8081
# This allows us to run both server and client on the same computer
-Forg.osgi.service.http.port=8081
