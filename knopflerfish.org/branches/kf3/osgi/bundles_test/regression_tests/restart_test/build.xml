<?xml version="1.0" encoding="UTF-8"?>

<project name="restart_test" default="all">

  <dirname property="proj.dir" file="${ant.file.restart_test}"/>
  <import  file="${proj.dir}/../test_import.xml"/>

  <property name = "bundle.build.all"  value="false"/>
  <property name = "bundle.build.api"  value="false"/>
  <property name = "bundle.build.lib"  value="false"/>
  <property name = "bundle.build.impl" value="true"/>
  <property name = "bundle.build.doc"  value="false"/>

  <property name  = "impl.pattern"
            value = "org/knopflerfish/bundle/**"/>

  <path id = "bundle.compile.path">
    <pathelement location="junit_all-N.N.N.jar"/>
    <pathelement location="${osgi.dir}/bundles_opt/junit/junit/resources/junit.jar"/>
  </path>

  <property name="do.bundle.custom.pre" value="true"/>

  <target name="bundle.custom.pre">
   <copy file  = "${jars.dir}/bundleA_test/bundleA_test-1.0.0.jar"
         todir = "resources"/>
   <copy file  = "${jars.dir}/bundleB_test/bundleB_test-1.0.0.jar"
         todir = "resources"/>
   <copy file  = "${jars.dir}/bundleC_test/bundleC_test-1.0.0.jar"
         todir = "resources"/>
   <copy file  = "${jars.dir}/bundleF_test/bundleF_test-1.0.0.jar"
         todir = "resources"/>
  </target>

  <property name="do.bundle.custom.post" value="true"/>
  <property name="xargs1" location="test-restart1.xargs"/>
  <property name="xargs2" location="test-restart2.xargs"/>
  <target name="bundle.custom.post">
    <property name="bundleVersionFilterTester"
	      location="${outdir}/${ant.project.name}.props"/>
    <bundle_locator replacefilterfile="${bundleVersionFilterTester}">
      <fileset dir="${osgi.dir}">
	<include name="jars/**/*.jar"/>
	<include name="bundles_test/regression_tests/jars/**/*.jar"/>
      </fileset>
    </bundle_locator>
    <copy file="${xargs1}.in" tofile="${xargs1}" overwrite="true"/>
    <replace file="${xargs1}"
	     replacefilterfile="${bundleVersionFilterTester}">
      <replacefilter token="$(OSGI_DIR)" value="${osgi.dir}"/>
    </replace>
    <copy file="${xargs2}.in" tofile="${xargs2}" overwrite="true"/>
    <replace file="${xargs2}"
	     replacefilterfile="${bundleVersionFilterTester}">
      <replacefilter token="$(OSGI_DIR)" value="${osgi.dir}"/>
    </replace>
  </target>

  <import file="${ant.dir}/bundlebuild.xml"/>

</project>
